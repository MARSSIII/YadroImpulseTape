name: CMake on multiple platforms (tests only)

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Set build directory
        id: vars
        shell: bash
        run: echo "dir_build=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

      - name: Configure CMake
        run: |
          cmake -B "${{ steps.vars.outputs.dir_build }}" \
            -S "${{ github.workspace }}" \
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build "${{ steps.vars.outputs.dir_build }}" --config ${{ matrix.build_type }}

      - name: Run tests (ctest)
        working-directory: ${{ steps.vars.outputs.dir_build }}
        run: ctest --build-config ${{ matrix.build_type }}
